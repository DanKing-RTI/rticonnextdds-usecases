
<!--
RTI Data Distribution Service Deployment
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="c:/program files/rti/5.0.0/ndds.5.0.0/resource/qos_profiles_5.0.0/schema/rti_dds_profiles.xsd" 
     version="5.0.0">

    
    <!-- types -->
    <types>
    
        <!-- Defining the alarm levels available -->
        <enum name="AlarmLevel">
            <enumerator name="NONE"/>
            <enumerator name="WARNING"/>
            <enumerator name="ERROR"/>
        </enum>

        <enum name="AlarmKind">
            <enumerator name="NONE"/>
            <enumerator name="TOO_COLD"/>
            <enumerator name="TOO_HOT"/>
        </enum>
        
        <!-- Defining the data type for alarm data -->
        <struct name="AlarmType">
            <!-- An ID of the application that is sending alarm data -->
            <member name="appID" key="true" type="long"/>
            
            <!-- The type of alarm message that is being sent -->
            <!-- Note that you must use type="nonBasic" and nonBasicTypeName for -->
            <!-- for non-primitive types.  -->
            <member name="alarmType" type="nonBasic" nonBasicTypeName="AlarmKind"/>
            
            <!-- Note that you must use type="nonBasic" and nonBasicTypeName for --> 
            <!-- for non-primitive types.  -->
            <member name="alarmLevel" type="nonBasic" nonBasicTypeName="AlarmLevel"/>
        </struct>

        <struct name="TemperatureType">
            <member name="sensorId" type="long" key="true"/>
            <member name="value" type="float"/>
        </struct>
    </types>


    <!-- A namespace for a set of domains -->
    <!--!!!!!!!!!!!!!!!!!!!!!!!!! NOTE: better description of this, or else move this to individual DomainParticipants -->
    <domain_library name="ExampleDomains" >

        <!-- A domain is a logical, isolated communication network. -->
        <!-- Here you must associate data types and topics with a -->
        <!-- particular domain. -->
        <domain name="DataDomain" domain_id="5">
            <register_type name="AlarmType" kind="dynamicData"
                     type_ref="AlarmType" />
            <register_type name="TemperatureType" kind="dynamicData"
                     type_ref="TemperatureType" />

            <!-- Have a single topic called Alarm -->
            <topic name="Alarm"   register_type_ref="AlarmType"/>
            <topic name="Temperature" register_type_ref="TemperatureType" />

        </domain>
    </domain_library>

    <!-- Grouping of communication objects -->
    <participant_library name="SenderSideParticipantLibrary">

        <!-- DomainParticipants are containers for all other communication -->
        <!-- objects. They act within a single domain. (See <domain> above) -->
        <domain_participant name="AlarmReceiver" 
                            domain_ref="ExampleDomains::DataDomain">
            <!-- Container for the DataReaders that actually receive data -->
            <subscriber name="AlarmSubscriber">
                <!-- DataReader that receives alarm data -->
                <data_reader name="AlarmReader"   topic_ref="AlarmType"/>
                
                <!-- DataReader that receives temperature data -->
                <data_reader name="TemperatureReader" topic_ref="TemperatureType"/>
            </subscriber>
            
        </domain_participant>


   
    </participant_library>
</dds>
